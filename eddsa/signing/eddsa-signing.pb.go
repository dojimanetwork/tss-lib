// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protob/eddsa-signing.proto

package signing

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
// Represents a BROADCAST message sent to all parties during Round 1 of the EDDSA TSS signing protocol.
type EDDSASignRound1Message struct {
	Commitment           []byte   `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EDDSASignRound1Message) Reset()         { *m = EDDSASignRound1Message{} }
func (m *EDDSASignRound1Message) String() string { return proto.CompactTextString(m) }
func (*EDDSASignRound1Message) ProtoMessage()    {}
func (*EDDSASignRound1Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d678aa6c179ddaa4, []int{0}
}

func (m *EDDSASignRound1Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EDDSASignRound1Message.Unmarshal(m, b)
}
func (m *EDDSASignRound1Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EDDSASignRound1Message.Marshal(b, m, deterministic)
}
func (m *EDDSASignRound1Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EDDSASignRound1Message.Merge(m, src)
}
func (m *EDDSASignRound1Message) XXX_Size() int {
	return xxx_messageInfo_EDDSASignRound1Message.Size(m)
}
func (m *EDDSASignRound1Message) XXX_DiscardUnknown() {
	xxx_messageInfo_EDDSASignRound1Message.DiscardUnknown(m)
}

var xxx_messageInfo_EDDSASignRound1Message proto.InternalMessageInfo

func (m *EDDSASignRound1Message) GetCommitment() []byte {
	if m != nil {
		return m.Commitment
	}
	return nil
}

//
// Represents a BROADCAST message sent to all parties during Round 2 of the EDDSA TSS signing protocol.
type EDDSASignRound2Message struct {
	DeCommitment         [][]byte `protobuf:"bytes,1,rep,name=de_commitment,json=deCommitment,proto3" json:"de_commitment,omitempty"`
	ProofAlphaX          []byte   `protobuf:"bytes,2,opt,name=proof_alpha_x,json=proofAlphaX,proto3" json:"proof_alpha_x,omitempty"`
	ProofAlphaY          []byte   `protobuf:"bytes,3,opt,name=proof_alpha_y,json=proofAlphaY,proto3" json:"proof_alpha_y,omitempty"`
	ProofT               []byte   `protobuf:"bytes,4,opt,name=proof_t,json=proofT,proto3" json:"proof_t,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EDDSASignRound2Message) Reset()         { *m = EDDSASignRound2Message{} }
func (m *EDDSASignRound2Message) String() string { return proto.CompactTextString(m) }
func (*EDDSASignRound2Message) ProtoMessage()    {}
func (*EDDSASignRound2Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d678aa6c179ddaa4, []int{1}
}

func (m *EDDSASignRound2Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EDDSASignRound2Message.Unmarshal(m, b)
}
func (m *EDDSASignRound2Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EDDSASignRound2Message.Marshal(b, m, deterministic)
}
func (m *EDDSASignRound2Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EDDSASignRound2Message.Merge(m, src)
}
func (m *EDDSASignRound2Message) XXX_Size() int {
	return xxx_messageInfo_EDDSASignRound2Message.Size(m)
}
func (m *EDDSASignRound2Message) XXX_DiscardUnknown() {
	xxx_messageInfo_EDDSASignRound2Message.DiscardUnknown(m)
}

var xxx_messageInfo_EDDSASignRound2Message proto.InternalMessageInfo

func (m *EDDSASignRound2Message) GetDeCommitment() [][]byte {
	if m != nil {
		return m.DeCommitment
	}
	return nil
}

func (m *EDDSASignRound2Message) GetProofAlphaX() []byte {
	if m != nil {
		return m.ProofAlphaX
	}
	return nil
}

func (m *EDDSASignRound2Message) GetProofAlphaY() []byte {
	if m != nil {
		return m.ProofAlphaY
	}
	return nil
}

func (m *EDDSASignRound2Message) GetProofT() []byte {
	if m != nil {
		return m.ProofT
	}
	return nil
}

//
// Represents a BROADCAST message sent to all parties during Round 3 of the EDDSA TSS signing protocol.
type EDDSASignRound3Message struct {
	S                    []byte   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EDDSASignRound3Message) Reset()         { *m = EDDSASignRound3Message{} }
func (m *EDDSASignRound3Message) String() string { return proto.CompactTextString(m) }
func (*EDDSASignRound3Message) ProtoMessage()    {}
func (*EDDSASignRound3Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d678aa6c179ddaa4, []int{2}
}

func (m *EDDSASignRound3Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EDDSASignRound3Message.Unmarshal(m, b)
}
func (m *EDDSASignRound3Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EDDSASignRound3Message.Marshal(b, m, deterministic)
}
func (m *EDDSASignRound3Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EDDSASignRound3Message.Merge(m, src)
}
func (m *EDDSASignRound3Message) XXX_Size() int {
	return xxx_messageInfo_EDDSASignRound3Message.Size(m)
}
func (m *EDDSASignRound3Message) XXX_DiscardUnknown() {
	xxx_messageInfo_EDDSASignRound3Message.DiscardUnknown(m)
}

var xxx_messageInfo_EDDSASignRound3Message proto.InternalMessageInfo

func (m *EDDSASignRound3Message) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func init() {
	proto.RegisterType((*EDDSASignRound1Message)(nil), "EDDSASignRound1Message")
	proto.RegisterType((*EDDSASignRound2Message)(nil), "EDDSASignRound2Message")
	proto.RegisterType((*EDDSASignRound3Message)(nil), "EDDSASignRound3Message")
}

func init() {
	proto.RegisterFile("protob/eddsa-signing.proto", fileDescriptor_d678aa6c179ddaa4)
}

var fileDescriptor_d678aa6c179ddaa4 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xd2, 0x4f, 0x4d, 0x49, 0x29, 0x4e, 0xd4, 0x2d, 0xce, 0x4c, 0xcf, 0xcb, 0xcc, 0x4b,
	0xd7, 0x03, 0x0b, 0x2a, 0x59, 0x70, 0x89, 0xb9, 0xba, 0xb8, 0x04, 0x3b, 0x06, 0x67, 0xa6, 0xe7,
	0x05, 0xe5, 0x97, 0xe6, 0xa5, 0x18, 0xfa, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x0a, 0xc9, 0x71,
	0x71, 0x25, 0xe7, 0xe7, 0xe6, 0x66, 0x96, 0xe4, 0xa6, 0xe6, 0x95, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0xf0, 0x04, 0x21, 0x89, 0x28, 0xcd, 0x63, 0x44, 0xd7, 0x6a, 0x04, 0xd3, 0xaa, 0xcc, 0xc5, 0x9b,
	0x92, 0x1a, 0x8f, 0xa2, 0x9b, 0x59, 0x83, 0x27, 0x88, 0x27, 0x25, 0xd5, 0x19, 0x2e, 0x26, 0xa4,
	0xc4, 0xc5, 0x5b, 0x50, 0x94, 0x9f, 0x9f, 0x16, 0x9f, 0x98, 0x53, 0x90, 0x91, 0x18, 0x5f, 0x21,
	0xc1, 0x04, 0xb6, 0x82, 0x1b, 0x2c, 0xe8, 0x08, 0x12, 0x8b, 0x40, 0x57, 0x53, 0x29, 0xc1, 0x8c,
	0xae, 0x26, 0x52, 0x48, 0x9c, 0x8b, 0x1d, 0xa2, 0xa6, 0x44, 0x82, 0x05, 0x2c, 0xcb, 0x06, 0xe6,
	0x86, 0x28, 0xa9, 0xa1, 0xbb, 0xcf, 0x18, 0xe6, 0x3e, 0x1e, 0x2e, 0xc6, 0x62, 0xa8, 0x8f, 0x18,
	0x8b, 0x9d, 0xf8, 0xa3, 0x78, 0xc1, 0x21, 0xa3, 0x0f, 0x0d, 0x99, 0x24, 0x36, 0x70, 0xd0, 0x18,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0xad, 0x72, 0x2a, 0x38, 0x01, 0x00, 0x00,
}
